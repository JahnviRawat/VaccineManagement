@model CO_VM.Models.User

@{
    ViewData["Title"] = "Login";
}
<!-- Font Awesome CDN -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"
      integrity="sha512-papNMHlvK3DoypdtVZtvpJvM33YxP4iTXqU2Gq3CUM2zOvR+ACF7JpPpR8gE3WYNo4mFSLU0J08TxR+BXTf1dA=="
      crossorigin="anonymous" referrerpolicy="no-referrer" />

<style>
    body {
        margin: 0;
        padding: 0;
        font-family: 'Segoe UI', sans-serif;
        background: linear-gradient(120deg, #eaf6ff, #cfe2f3);
        height: 100vh;
        overflow: hidden;
    }

    .split-screen {
        display: flex;
        height: 100vh;
    }

    .login-half {
        width: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        background: linear-gradient(145deg, #f0f7ff, #dceeff);
    }

    .info-half {
        width: 50%;
        background: url('/vaccine-info.webp') no-repeat center center;
        background-size: cover;
        position: relative;
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding: 60px;
        color: #ffffff;
        background-blend-mode: overlay;
        background: linear-gradient(135deg, rgba(9, 87, 149, 0.8), rgba(255, 255, 255, 0.8));
    }

        .info-half h2 {
            font-weight: bold;
            margin-bottom: 20px;
            font-size: 32px;
            text-shadow: 1px 1px 4px #00000044;
        }

        .info-half ul {
            list-style: disc;
            padding-left: 20px;
            font-size: 18px;
        }

    .card-login {
        background: #ffffff;
        border-radius: 16px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
        padding: 40px;
        width: 100%;
        max-width: 420px;
    }

        .card-login h3 {
            text-align: center;
            font-weight: 600;
            margin-bottom: 30px;
            color: #1976d2;
        }

    .form-label {
        font-weight: 500;
        color: #2d3a4b;
    }

    .form-control {
        border-radius: 8px;
        border: 1px solid #cfd8dc;
        padding: 10px 12px;
    }

    .btn-login {
        background: #1976d2;
        color: #fff;
        font-weight: 600;
        border-radius: 8px;
        padding: 10px;
        width: 100%;
        border: none;
        transition: background 0.2s ease;
    }

        .btn-login:hover {
            background: #125ea4;
        }

    .captcha-display {
        font-family: monospace;
        font-size: 18px;
        font-weight: bold;
        padding: 6px 12px;
        background: #f1f1f1;
        border: 1px solid #ccc;
        border-radius: 6px;
        user-select: none;
        letter-spacing: 4px;
    }

    .links-row {
        display: flex;
        justify-content: space-between;
        font-size: 14px;
        margin-top: 10px;
    }

    .text-danger {
        font-size: 14px;
    }

    media (max-width: 991px) {
        .split-screen

    {
        flex-direction: column;
    }

    .login-half,
    .info-half {
        width: 100%;
        height: auto;
    }

    .info-half {
        padding: 40px 20px;
    }

    }
</style>

<div class="split-screen">
    <div class="login-half">
        <div class="card-login">
            <h4><i class="fa-solid fa-user-shield me-2"></i>User Login</h4>

            @using (Html.BeginForm())
            {
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="mb-3">
                    <label class="form-label">Username</label>
                    @Html.TextBoxFor(c => c.Username, new { @class = "form-control", placeholder = "Enter Username" })
                    @Html.ValidationMessageFor(c => c.Username, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    <label class="form-label">Password</label>
                    @Html.PasswordFor(c => c.Password, new { @class = "form-control", placeholder = "Enter Password" })
                    @Html.ValidationMessageFor(c => c.Password, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    <label class="form-label">Captcha</label>
                    <div class="d-flex align-items-center gap-3 mb-2">
                        <span id="captcha-code" class="captcha-display"></span>
                        <button type="button" onclick="refreshCaptcha();" class="btn btn-outline-secondary btn-sm">Refresh</button>
                    </div>
                    <input type="text" name="Captcha" class="form-control" placeholder="Enter captcha here" />
                    <span class="text-danger">@ViewBag.CaptchaError</span>
                </div>

                <div class="links-row mb-3">
                    <a href="@Url.Action("ForgotPassword", "Vaccine")">Forgot?</a>
                    <a href="@Url.Action("ResetPassword", "Vaccine")">Reset</a>
                    <a href="@Url.Action("Register", "Vaccine")">Register</a>
                </div>

                <button type="submit" class="btn btn-login">LOGIN</button>
            }

            @if (TempData["Success"] != null)
            {
                <script>
                    alert("@TempData["Success"]");
                </script>
            }
        </div>
    </div>

    <div class="info-half">
        <h2>Welcome to Vaccine Portal</h2>
        <ul>
            <li>Manage your vaccinations securely</li>
            <li>Book and track appointments</li>
            <li>Download vaccination certificates</li>
            <li>Stay informed with latest advisories</li>
        </ul>
    </div>
</div>

<script>
    function refreshCaptcha() {
        fetch('@Url.Action("Captcha", "Vaccine")')
            .then(response => response.text())
            .then(data => {
                document.getElementById('captcha-code').innerText = data;
            });
    }

    window.onload = function () {
        refreshCaptcha();
    };
</script>