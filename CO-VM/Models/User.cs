// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace CO_VM.Models;

public partial class User

{

    [Key]
    public int UserId { get; set; }


    [Required(ErrorMessage = "UserName is required")]
    [StringLength(50, ErrorMessage = "Username cannot exceed 50 characters")]
    public string Username { get; set; }

    [Required(ErrorMessage = "FullName is required")]
    [StringLength(100, ErrorMessage = "Full Name cannot exceed 100 characters")]
    [RegularExpression(@"^[a-zA-Z]+$", ErrorMessage = "Full Name can only contain letters ")]
    public string FullName { get; set; }

    [Required(ErrorMessage = "Email is required")]
    [RegularExpression(@"^[^@\s]+@[^@\s]+\.[^@\s]+$", ErrorMessage = "Invalid email format")]
    [StringLength(100, ErrorMessage = "Email cannot exceed 100 characters")]
    public string Email { get; set; }

    [Required(ErrorMessage = "Password is required")]
    public byte[] Password { get; set; }

    [Required(ErrorMessage = "Aadhar no is required")]
    [RegularExpression(@"^\d{12}$", ErrorMessage = "Aadhaar number must be 12 digits")]
    public string AadhaarNo { get; set; }

    [Required(ErrorMessage = "Gender is required")]
    [RegularExpression(@"^(Male|Female|Other)$", ErrorMessage = "Gender must be Male, Female, or Other")]
    public string Gender { get; set; }

    [Required(ErrorMessage = "Date of Birth is required")]
    public DateOnly Dob { get; set; }

    [Required(ErrorMessage = "Phone Number is required")]
    [Phone(ErrorMessage = "Invalid Phone Number")]
    [RegularExpression(@"^[\d]{10}$", ErrorMessage = "Phone number must be 10 digits")]
    public string PhoneNumber { get; set; }

    [StringLength(200, ErrorMessage = "Address cannot exceed 200 characters")]
    public string Address { get; set; }


    [StringLength(50, ErrorMessage = "City cannot exceed 50 characters")]
    public string City { get; set; }

    [StringLength(50, ErrorMessage = "State cannot exceed 50 characters")]
    public string State { get; set; }

    public string SecurityQuestion { get; set; }

    public string SecurityAnswer { get; set; }

    public virtual ICollection<Booking> Bookings { get; set; } = new List<Booking>();

    public virtual ICollection<Family> Families { get; set; } = new List<Family>();

    public virtual ICollection<Slot> Slots { get; set; } = new List<Slot>();

    public virtual ICollection<VaccinationFeedback> VaccinationFeedbacks { get; set; } = new List<VaccinationFeedback>();

}
